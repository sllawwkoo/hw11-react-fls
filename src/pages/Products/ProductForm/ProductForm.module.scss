.container {
	width: 100%;
	max-width: toRem(800);
	margin-inline: auto;
	padding-inline: toRem(15);
	padding-block: toRem(30);
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
}

.title {
	font-weight: 700;
	line-height: 1.2;
	@include adaptiveValue("font-size", 24, 20);
	@include adaptiveValue("margin-bottom", 20, 15);
	text-align: center;
	text-shadow: 0px toRem(4) toRem(4) rgba(0, 0, 0, 0.25);
}

.form {
	display: flex;
	flex-direction: column;
	gap: toRem(30);
	width: 100%;
	max-width: toRem(500);
	margin: 0 auto;
	padding: toRem(30);
	background-color: #f7f7f7;
	border-radius: toRem(12);
	box-shadow: 0 toRem(4) toRem(10) rgba(0, 0, 0, 0.1);
}

.inputsBlock {
	display: flex;
	flex-direction: column;
	gap: toRem(24);
}

.inputLine {
	display: flex;
	flex-direction: column;
	gap: toRem(10);

	label {
		font-weight: 600;
		color: #333;
		text-shadow: 0px toRem(4) toRem(4) rgba(0, 0, 0, 0.25);
		@include adaptiveValue("font-size", 16, 12);
	}

	input {
		@include adaptiveValue("padding-block", 10, 8);
		@include adaptiveValue("padding-inline", 14, 12);
		@include adaptiveValue("font-size", 16, 12);
		border: toRem(1) solid #ccc;
		border-radius: toRem(8);
		box-shadow: inset 0 toRem(2) toRem(4) rgba(0, 0, 0, 0.1);
		transition:
			border-color var(--transition-ease-base),
			box-shadow var(--transition-ease-base);
		will-change: border-color, box-shadow;

		&:focus {
			border-color: #0077ff;
			box-shadow: 0 0 toRem(4) rgba(0, 119, 255, 0.5);
			outline: none;
		}
	}
}

.buttonsBlock {
	display: flex;
	gap: toRem(20);
	align-items: center;
	justify-content: space-between;

	& > * {
		flex: 1;

		@media (max-width: $mobileSmall) {
			flex-basis: 100%;
		}
	}

	@media (max-width: $mobileSmall) {
		flex-wrap: wrap;
		justify-content: center;
	}
}

.button {
	@include adaptiveValue("padding-block", 12, 8);
	@include adaptiveValue("padding-inline", 14, 12);
	@include adaptiveValue("font-size", 16, 12);
	border-radius: toRem(8);
	border: none;
	font-weight: 600;
	cursor: pointer;
	background-color: #007bff;
	color: #fff;
	transition:
		background-color var(--transition-ease-base),
		transform var(--transition-ease-base);
	will-change: background-color, transform;

	@media (any-hover: hover) {
		&:hover:not(:disabled) {
			background: #0056b3;
			transform: translateY(toRem(-2));
		}
	}

	&:active:not(:disabled) {
		transform: translateY(0);
	}
}

.disabled {
	background-color: #ccc;
	cursor: not-allowed;
}
